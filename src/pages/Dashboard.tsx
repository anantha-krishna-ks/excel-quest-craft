import { useState } from "react"
import { Search, Sparkles, ArrowRight, BarChart, Clock, Star, Users, FileText, Brain, Database, BookOpen, RefreshCw, GitCompare, Image, MessageSquare, ScanLine, PenTool, BarChart3, Bot } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { AppSidebar } from "@/components/AppSidebar"
import { ProfileDropdown } from "@/components/ProfileDropdown"
import { Link } from "react-router-dom"

// Import tool images
import itemGenerationImage from "@/assets/item-generation.png"
import itemWriterImage from "@/assets/item-writer.png"
import itemMetadataImage from "@/assets/item-metadata.png"
import courseGeneratorImage from "@/assets/course-generator.png"
import itemRewriterImage from "@/assets/item-rewriter.png"
import itemSimilarityImage from "@/assets/item-similarity.png"
import docChatImage from "@/assets/doc-chat-ncert.png"
import ocrImage from "@/assets/ocr.png"
import comingSoonImage from "@/assets/coming-soon.png"

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState("All")
  const [subscriptionFilter, setSubscriptionFilter] = useState("All")

  const tabs = [
    "All", "AI Generation", "Content Creation", "Education", 
    "Assessment", "Analytics", "AI Tools", "AI Interaction"
  ]

  const subscriptionCategories = ["All", "Active Subscriptions", "Yet to Subscribe"]

  const getIconForTool = (toolId: string) => {
    const iconMap = {
      "item-generation": Brain,
      "item-writer": PenTool,
      "item-metadata": Database,
      "course-generator": BookOpen,
      "item-rewriter": RefreshCw,
      "item-similarity": GitCompare,
      "course-generator-2": BookOpen,
      "scenario-and": FileText,
      "doc-chat-ncert": MessageSquare,
      "doc-chat-moby": MessageSquare,
      "ocr": ScanLine,
      "essay-evaluation": BarChart3,
      "essay-evaluation-zero": BarChart3,
      "test-forensics": BarChart,
      "image-generator": Image,
      "ai-persona": Bot
    }
    return iconMap[toolId] || Sparkles
  }

  const aiTools = [
    {
      id: "item-generation",
      title: "Item Generation",
      description: "Subjective and objective questions are generated by the items th...",
      path: "/item-generation",
      image: itemGenerationImage,
      category: "AI Generation",
      badge: "New",
      badgeColor: "bg-blue-500",
      icon: Brain,
      subscriptionStatus: "active"
    },
    {
      id: "item-writer",
      title: "Item Writer",
      description: "Objective questions are generated by the items th...",
      path: "/item-writer",
      image: itemWriterImage,
      category: "Content Creation",
      icon: PenTool,
      subscriptionStatus: "active"
    },
    {
      id: "item-metadata",
      title: "Item Metadata",
      description: "AI powered tool knowledge generator helps you...",
      path: "/item-metadata",
      image: itemMetadataImage,
      category: "Analytics",
      icon: Database,
      subscriptionStatus: "pending"
    },
    {
      id: "course-generator",
      title: "Course Generator",
      description: "AI assistant course generator that will help yo...",
      path: "/course-generator",
      image: courseGeneratorImage,
      category: "Education",
      badge: "Popular",
      badgeColor: "bg-green-500",
      icon: BookOpen,
      subscriptionStatus: "active"
    },
    {
      id: "item-rewriter",
      title: "Item Rewriter",
      description: "Easily from old rewritten making the item better an...",
      path: "/item-rewriter",
      image: itemRewriterImage,
      category: "Content Creation",
      icon: RefreshCw,
      subscriptionStatus: "active"
    },
    {
      id: "item-similarity",
      title: "Item Similarity",
      description: "An AI powered tool helps compare questions and...",
      path: "/item-similarity",
      image: itemSimilarityImage,
      category: "Analytics",
      icon: GitCompare,
      subscriptionStatus: "pending"
    },
    {
      id: "course-generator-2",
      title: "Course Generator",
      description: "AI assistant course generator that will help yo...",
      path: "/course-generator-2",
      image: courseGeneratorImage,
      category: "Content Creation",
      badge: "Popular",
      badgeColor: "bg-green-500",
      icon: BookOpen,
      subscriptionStatus: "active"
    },
    {
      id: "scenario-and",
      title: "Scenario and...",
      description: "Generate a variety of scenario and various...",
      path: "/scenario",
      image: comingSoonImage,
      category: "Content Creation",
      icon: FileText,
      subscriptionStatus: "pending"
    },
    {
      id: "doc-chat-ncert",
      title: "Doc Chat - NCERT",
      description: "NCERT textbook by asking query, This textbo...",
      path: "/doc-chat-ncert",
      image: docChatImage,
      category: "Education",
      icon: MessageSquare,
      subscriptionStatus: "active"
    },
    {
      id: "doc-chat-moby",
      title: "Doc Chat - Moby-click",
      description: "Verify SAS textbook by asking query, This textbo...",
      path: "/doc-chat-moby",
      image: docChatImage,
      category: "Education",
      icon: MessageSquare,
      subscriptionStatus: "active"
    },
    {
      id: "ocr",
      title: "OCR",
      description: "Optical Character Recognition - Images from...",
      path: "/ocr",
      image: ocrImage,
      category: "AI Tools",
      badge: "New",
      badgeColor: "bg-blue-500",
      icon: ScanLine,
      subscriptionStatus: "active"
    },
    {
      id: "essay-evaluation",
      title: "Essay Evaluation - Fine...",
      description: "Personalized feedback using AI to get some evaluation...",
      path: "/essay-evaluation",
      image: comingSoonImage,
      category: "Assessment",
      icon: BarChart3,
      subscriptionStatus: "pending"
    },
    {
      id: "essay-evaluation-zero",
      title: "Essay Evaluation - Zer...",
      description: "A paperless questions are evaluated using SBA and...",
      path: "/essay-evaluation-zero",
      image: comingSoonImage,
      category: "Assessment",
      icon: BarChart3,
      subscriptionStatus: "pending"
    },
    {
      id: "test-forensics",
      title: "Test Forensics",
      description: "Find and leverage the power of analytics in online or...",
      path: "/test-forensics",
      image: comingSoonImage,
      category: "Analytics",
      icon: BarChart,
      subscriptionStatus: "pending"
    },
    {
      id: "image-generator",
      title: "Image Generator",
      description: "Stable Diffusion - AI image generator your thoughts...",
      path: "/image-generator",
      image: comingSoonImage,
      category: "AI Generation",
      badge: "Popular",
      badgeColor: "bg-green-500",
      icon: Image,
      subscriptionStatus: "active"
    },
    {
      id: "ai-persona",
      title: "AI Persona",
      description: "AI Persona for famous intellectual dialogues in...",
      path: "/ai-persona",
      image: comingSoonImage,
      category: "AI Interaction",
      icon: Bot,
      subscriptionStatus: "pending"
    }
  ]

  const filteredTools = aiTools.filter(tool => {
    const matchesCategory = activeTab === "All" || tool.category === activeTab
    const matchesSubscription = 
      subscriptionFilter === "All" || 
      (subscriptionFilter === "Active Subscriptions" && tool.subscriptionStatus === "active") ||
      (subscriptionFilter === "Yet to Subscribe" && tool.subscriptionStatus === "pending")
    return matchesCategory && matchesSubscription
  })

  return (
    <div className="min-h-screen bg-gray-50">
      <AppSidebar />
      
      <div className="ml-0 lg:ml-52 min-h-screen flex flex-col">
        {/* Header */}
        <header className="sticky top-0 z-50 bg-white border-b border-gray-200">
          <div className="flex h-16 items-center justify-between px-6">
            <div className="flex items-center gap-4">
              <div>
                <h1 className="text-lg font-bold text-gray-900">Welcome Back, Shivaraj M!</h1>
                <p className="text-xs text-gray-600">Explore AI-powered tools to enhance your educational content creation</p>
              </div>
            </div>
            
            <div className="flex items-center gap-4">
              <div className="flex items-center gap-2">
                <div className="w-4 h-4 bg-blue-600 rounded flex items-center justify-center">
                  <span className="text-white text-xs">âœ¦</span>
                </div>
                <span className="text-sm text-blue-600 font-medium">4,651 Tokens</span>
              </div>
              <div className="relative hidden md:block">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
                <Input 
                  placeholder="Search AI tools..." 
                  className="pl-10 w-60 lg:w-80 border-gray-200"
                />
              </div>
              <ProfileDropdown />
            </div>
          </div>
        </header>

        {/* Page Title */}
        <div className="p-2">
          
          
        </div>

        {/* Subscription Filter */}
        <div className="px-6 pb-4">
          <div className="flex items-center gap-1 p-1 bg-gray-100 rounded-lg w-fit">
            {subscriptionCategories.map((category) => (
              <button
                key={category}
                onClick={() => setSubscriptionFilter(category)}
                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${
                  subscriptionFilter === category
                    ? "bg-white text-blue-600 shadow-sm"
                    : "text-gray-600 hover:text-gray-900"
                }`}
              >
                {category}
              </button>
            ))}
          </div>
        </div>

        {/* Stats Cards */}
        <div className="px-6 pb-6">
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-6">
            <Card className="p-6 bg-blue-50 border border-gray-200 shadow-sm">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-8 h-8 bg-white rounded-lg flex items-center justify-center shadow-sm">
                  <Sparkles className="h-4 w-4 text-blue-600" />
                </div>
                <span className="font-medium text-gray-700">Available Tools</span>
              </div>
              <div className="text-2xl font-bold text-gray-900 mb-1">16</div>
              <div className="text-sm font-medium text-blue-600">AI-Powered Solutions</div>
            </Card>

            <Card className="p-6 bg-green-50 border border-gray-200 shadow-sm">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-8 h-8 bg-white rounded-lg flex items-center justify-center shadow-sm">
                  <Star className="h-4 w-4 text-green-600" />
                </div>
                <span className="font-medium text-gray-700">Active Access</span>
              </div>
              <div className="text-2xl font-bold text-gray-900 mb-1">12</div>
              <div className="text-sm font-medium text-green-600">Tools Subscribed</div>
            </Card>

            <Card className="p-6 bg-purple-50 border border-gray-200 shadow-sm">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-8 h-8 bg-white rounded-lg flex items-center justify-center shadow-sm">
                  <ArrowRight className="h-4 w-4 text-purple-600" />
                </div>
                <span className="font-medium text-gray-700">Explore More</span>
              </div>
              <div className="text-2xl font-bold text-gray-900 mb-1">4</div>
              <div className="text-sm font-medium text-purple-600">Advanced Features</div>
            </Card>

            <Card className="p-6 bg-orange-50 border border-gray-200 shadow-sm">
              <div className="flex items-center gap-3 mb-4">
                <div className="w-8 h-8 bg-white rounded-lg flex items-center justify-center shadow-sm">
                  <Clock className="h-4 w-4 text-orange-600" />
                </div>
                <span className="font-medium text-gray-700">Today's Usage</span>
              </div>
              <div className="text-2xl font-bold text-gray-900 mb-1">847</div>
              <div className="text-sm font-medium text-orange-600">Tokens Generated</div>
            </Card>
          </div>
        </div>

        {/* Main Content */}
        <main className="flex-1 px-6 pb-6">

          {/* Filter Tabs */}
          <div className="flex gap-2 mb-6 overflow-x-auto">
            {tabs.map((tab) => (
              <Button
                key={tab}
                variant={activeTab === tab ? "default" : "outline"}
                onClick={() => setActiveTab(tab)}
                className={`px-4 py-2 rounded-lg whitespace-nowrap text-sm transition-all ${
                  activeTab === tab 
                    ? "bg-blue-600 hover:bg-blue-700 text-white shadow-sm" 
                    : "bg-white text-gray-700 border-gray-200 hover:bg-gray-50 hover:border-blue-300"
                }`}
              >
                {tab}
              </Button>
            ))}
          </div>

          {/* AI Tools Grid */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {filteredTools.map((tool) => {
              const IconComponent = tool.icon
              return (
                <Card key={tool.id} className="group bg-white border border-gray-200 shadow-sm hover:shadow-md transition-all duration-200 hover:-translate-y-1">
                  <div className="relative">
                    <img 
                      src={tool.image} 
                      alt={tool.title}
                      className="w-full h-40 object-cover rounded-t-lg"
                    />
                    {/* Tool Icon Overlay */}
                    <div className="absolute top-3 left-3 w-8 h-8 bg-white/90 backdrop-blur-sm rounded-lg flex items-center justify-center shadow-sm">
                      <IconComponent className="h-4 w-4 text-gray-700" />
                    </div>
                    {tool.badge && (
                      <div className={`absolute top-3 right-3 px-2 py-1 rounded-md text-xs text-white font-medium ${tool.badgeColor} shadow-sm`}>
                        {tool.badge}
                      </div>
                    )}
                    <div className="absolute bottom-3 right-3 px-2 py-1 rounded-md text-xs font-medium text-gray-700 bg-white/90 backdrop-blur-sm shadow-sm">
                      {tool.category}
                    </div>
                  </div>
                  
                  <CardContent className="p-6">
                    <h3 className="font-semibold text-gray-900 mb-2 line-clamp-1">{tool.title}</h3>
                    <p className="text-sm text-gray-600 mb-4 line-clamp-2">{tool.description}</p>
                    
                    <Link to={tool.path}>
                      <Button 
                        className="w-full bg-blue-600 hover:bg-blue-700 text-white transition-all duration-200 hover:scale-[1.02]"
                        size="sm"
                      >
                        <Sparkles className="h-4 w-4 mr-2" />
                        Launch App
                      </Button>
                    </Link>
                  </CardContent>
                </Card>
              )
            })}
          </div>

          {/* Footer */}
          <footer className="mt-12 pt-8 border-t border-gray-200 text-center">
            <p className="text-sm text-gray-500">
              Â© 2025 Excelsoftt Technologies Ltd. All rights reserved. | 
              <span className="ml-2">Help Center</span> | 
              <span className="ml-2">Privacy Policy</span> | 
              <span className="ml-2">Terms of Service</span> | 
              <span className="ml-4">Version 1.0.0</span> | 
              <span className="ml-2 flex items-center gap-1">Powered by 
                <img 
                  src="/lovable-uploads/b5b0f5a8-9552-4635-8c44-d5e6f994179c.png" 
                  alt="AI-Levate" 
                  className="h-4 w-auto"
                />
              </span>
            </p>
          </footer>
        </main>
      </div>
    </div>
  )
}

export default Dashboard